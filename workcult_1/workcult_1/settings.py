"""
Django settings for workcult_1 project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from email_info import EMAIL_USE_TLS, EMAIL_HOST, EMAIL_HOST_PASSWORD, EMAIL_HOST_USERNAME, EMAIL_PORT, EMAIL_BACKEND

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'nqsn&ol3h%_w(1)adpl2oe5*qx$w(vsop!ibe6r54&ya=ea*^n'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False
DEBUG = int(os.environ.get('DEBUG', default=1))

ALLOWED_HOSTS = [
    'django-env-13.eba-b7gm2iym.ap-south-1.elasticbeanstalk.com',
    '127.0.0.1',
    'workcult.herokuapp.com'
                 ]

EMAIL_BACKEND = EMAIL_BACKEND
EMAIL_USE_TLS = EMAIL_USE_TLS
EMAIL_HOST = EMAIL_HOST

EMAIL_HOST_USER = EMAIL_HOST_USERNAME
EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD
EMAIL_PORT = EMAIL_PORT

DEFAULT_FROM_EMAIL = 'Workcult <workcult07@gmail.com>'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'knox',
    'LocalUser',
    'MeetingRoom',
    'frontend',
    'invoice'
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
                                        'rest_framework.authentication.SessionAuthentication',
                                        'knox.auth.TokenAuthentication',
                                       # 'rest_framework.authentication.TokenAuthentication',
                                       # 'rest_framework.authentication.BasicAuthentication',
                                       #  'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
                                       #  'rest_framework_social_oauth2.authentication.SocialAuthentication',

                                       ),
    'DEFAULT_PERMISSION_CLASSES':
        [
            # 'rest_framework.permissions.IsAdminUser',
            #     'rest_framework.permissions.IsAdminUser',
            # 'rest_framework.permissions.IsAuthenticated',
            # 'rest_framework.permissions.IsAuthenticatedOrReadOnly',
        ],

}

# Without this the django admin page will not open
SITE_ID = 1


login_url = 'notknox/api/auth/login/'


AUTHENTICATION_BACKENDS = (

    # Django
    'django.contrib.auth.backends.ModelBackend',


    # # Facebook OAuth2
    # 'social_core.backends.facebook.FacebookAppOAuth2',
    # 'social_core.backends.facebook.FacebookOAuth2',
    #
    # # Google backends
    # # 'social_core.backends.google.GoogleAppOAuth2',
    # 'social_core.backends.google.GoogleOAuth2',
    #
    # # django-rest-framework-social-oauth2
    # 'rest_framework_social_oauth2.backends.DjangoOAuth2',

    # Following comment was written to test out another backend
    # 'LocalUser.backends.SettingsBackend',
    'LocalUser.views.EmailBackend'

)

CORS_ORIGIN_ALLOW_ALL = True


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',

    # whitenoise
    'whitenoise.middleware.WhiteNoiseMiddleware',
    
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'workcult_1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'workcult_1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATIC_URL = '/static/'

MEDIA_ROOT = '/media/'
MEDIA_URL = '/media/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')

AUTH_USER_MODEL = 'LocalUser.LocalUser'


LOGIN_REDIRECT_URL = '/'
# ACCOUNT_EMAIL_REQUIRED = 'True'
# ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
AUTH_USER_MODEL = 'LocalUser.LocalUser'

